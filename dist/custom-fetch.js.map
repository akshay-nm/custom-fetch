{"version":3,"file":"custom-fetch.js","sources":["../src/index.js"],"sourcesContent":["/**\r\n * Wrapper over fetch (browser), for more details, checkout <a href='https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch' rel='nofollow norefferer' target='_blank'>Using Fetch | MDN</a>.\r\n * @memberof module:utils\r\n *\r\n * @param {object} parameters url, method, and other request parameters as mentioned in <a href='https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options' rel='nofollow noreferrer' target='_blank'>Supplying request options to fetch</a>\r\n * @returns {object} { send: () => {}, abort: () => {} }\r\n */\r\nconst customFetch = (parameters = {}) => {\r\n  try {\r\n    // filter parameters\r\n    const {\r\n      method,\r\n      headers,\r\n      body,\r\n      mode,\r\n      credentials,\r\n      cache,\r\n      redirect,\r\n      referrer,\r\n      integrity,\r\n      ...otherOptions\r\n    } = parameters\r\n    const { url, timeoutDuration, ...unsupportedOptions } = otherOptions\r\n\r\n    // mention unsupported parameters\r\n    if (Object.keys(unsupportedOptions).length > 0)\r\n      console.log('Custom fetch: Ignoring unsupported options:', unsupportedOptions)\r\n\r\n    const fetchOptions = {\r\n      method,\r\n      headers,\r\n      body,\r\n      mode,\r\n      credentials,\r\n      cache,\r\n      redirect,\r\n      referrer,\r\n      integrity,\r\n    }\r\n\r\n    //console.log('Custom fetch: Fetch options:', fetchOptions)\r\n    const requestController = {}\r\n\r\n    // create an abort controller and add it to fetch options\r\n    requestController.controller = new window.AbortController()\r\n    fetchOptions.signal = requestController.controller.signal\r\n\r\n    // create a request object\r\n    requestController.request = new window.Request(url, fetchOptions)\r\n\r\n    // expose an abort function\r\n    requestController.timeout = null\r\n\r\n    requestController.abort = () =>\r\n      new Promise((resolve) => {\r\n        if (requestController.timeout) clearTimeout(requestController.timeout)\r\n        if (!requestController.controller.signal.aborted) requestController.controller.abort()\r\n        resolve(requestController.controller.signal.aborted)\r\n      })\r\n\r\n    // expose a send function\r\n    requestController.send = () => {\r\n      requestController.timeout = setTimeout(() => {\r\n        requestController.controller.abort()\r\n      }, timeoutDuration)\r\n      return window.fetch(requestController.request)\r\n    }\r\n\r\n    return requestController\r\n  } catch (error) {\r\n    console.log('Error:', error)\r\n    throw Error('Could not initialise the fetch: ', error.message)\r\n  }\r\n}\r\n\r\nexport default customFetch\r\n"],"names":["parameters","method","headers","body","mode","credentials","cache","redirect","referrer","integrity","otherOptions","url","timeoutDuration","unsupportedOptions","Object","keys","length","console","log","fetchOptions","requestController","controller","window","AbortController","signal","request","Request","timeout","abort","Promise","resolve","clearTimeout","aborted","send","setTimeout","fetch","error","Error","message"],"mappings":"qmBAOoB,eAACA,yDAAa,WAI5BC,EAUED,EAVFC,OACAC,EASEF,EATFE,QACAC,EAQEH,EARFG,KACAC,EAOEJ,EAPFI,KACAC,EAMEL,EANFK,YACAC,EAKEN,EALFM,MACAC,EAIEP,EAJFO,SACAC,EAGER,EAHFQ,SACAC,EAEET,EAFFS,UACGC,IACDV,8FACIW,EAAgDD,EAAhDC,IAAKC,EAA2CF,EAA3CE,gBAAoBC,IAAuBH,6BAGX,EAAzCI,OAAOC,KAAKF,GAAoBG,QAClCC,QAAQC,IAAI,8CAA+CL,OAEvDM,EAAe,CACnBlB,OAAAA,EACAC,QAAAA,EACAC,KAAAA,EACAC,KAAAA,EACAC,YAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,UAAAA,GAIIW,EAAoB,UAG1BA,EAAkBC,WAAa,IAAIC,OAAOC,gBAC1CJ,EAAaK,OAASJ,EAAkBC,WAAWG,OAGnDJ,EAAkBK,QAAU,IAAIH,OAAOI,QAAQf,EAAKQ,GAGpDC,EAAkBO,QAAU,KAE5BP,EAAkBQ,MAAQ,kBACxB,IAAIC,QAAQ,SAACC,GACPV,EAAkBO,SAASI,aAAaX,EAAkBO,SACzDP,EAAkBC,WAAWG,OAAOQ,SAASZ,EAAkBC,WAAWO,QAC/EE,EAAQV,EAAkBC,WAAWG,OAAOQ,YAIhDZ,EAAkBa,KAAO,kBACvBb,EAAkBO,QAAUO,WAAW,WACrCd,EAAkBC,WAAWO,SAC5BhB,GACIU,OAAOa,MAAMf,EAAkBK,UAGjCL,EACP,MAAOgB,SACPnB,QAAQC,IAAI,SAAUkB,GAChBC,MAAM,mCAAoCD,EAAME"}